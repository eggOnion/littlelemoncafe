import React, { act } from "react";
import { render } from "@testing-library/react";
import { ChakraProvider } from "@chakra-ui/react";

import Booking from "../pages/Booking";

describe("<Booking />", () => {
  test("smoke test", async () => {
    await act(async () => {
      render(
        <ChakraProvider>
          <Booking />
        </ChakraProvider>
      );
    });
  });

  test("Name is required", async () => {
    await act(async () => {
      render(
        <ChakraProvider>
          <Booking />
        </ChakraProvider>
      );
    });

    // Find the submit button and click it to submit the form
    const submitButton = screen.getByText("Submit");
    fireEvent.click(submitButton);

    // Check if the validation error message is displayed
    expect(screen.getByText("Name is required")).toBeInTheDocument();
  });

  test("displays no error when a valid name is entered", async () => {
    await act(async () => {
      render(
        <ChakraProvider>
          <Booking />
        </ChakraProvider>
      );
    });

    // Find the name input field and change its value
    const nameInput = screen.getByPlaceholderText("Enter your name");
    fireEvent.change(nameInput, { target: { value: "" } });

    // Find the submit button and click it
    const submitButton = screen.getByText("Submit");
    fireEvent.click(submitButton);

    // Check if the error message is removed after valid submission
    expect(screen.queryByText("Name is required")).not.toBeInTheDocument();
    // You can check if the alert is triggered if needed (mock alert)
    expect(global.alert).toHaveBeenCalledWith("Name submitted: John Doe");
  });
});
